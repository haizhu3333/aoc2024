(set-option :pp.bv-literals false)
(declare-const a0 (_ BitVec 64))
(assert (bvult a0 (_ bv164545589767869 64)))
(define-const x0 (_ BitVec 64) (bvand a0 (_ bv7 64)))
(define-const x1 (_ BitVec 64) (bvxor x0 (_ bv1 64)))
(define-const x2 (_ BitVec 64) (bvlshr a0 x1))
(define-const x3 (_ BitVec 64) (bvxor x1 (_ bv5 64)))
(define-const x4 (_ BitVec 64) (bvxor x3 x2))
(define-const x5 (_ BitVec 64) (bvlshr a0 (_ bv3 64)))
(assert (= (bvand x4 (_ bv7 64)) (_ bv2 64)))
(define-const b6 Bool (= x5 (_ bv0 64)))
(assert (=> b6 false))
(define-const x7 (_ BitVec 64) (bvand x5 (_ bv7 64)))
(define-const x8 (_ BitVec 64) (bvxor x7 (_ bv1 64)))
(define-const x9 (_ BitVec 64) (bvlshr x5 x8))
(define-const x10 (_ BitVec 64) (bvxor x8 (_ bv5 64)))
(define-const x11 (_ BitVec 64) (bvxor x10 x9))
(define-const x12 (_ BitVec 64) (bvlshr x5 (_ bv3 64)))
(assert (=> (not b6) (= (bvand x11 (_ bv7 64)) (_ bv4 64))))
(define-const b13 Bool (= x12 (_ bv0 64)))
(assert (=> b13 false))
(define-const x14 (_ BitVec 64) (bvand x12 (_ bv7 64)))
(define-const x15 (_ BitVec 64) (bvxor x14 (_ bv1 64)))
(define-const x16 (_ BitVec 64) (bvlshr x12 x15))
(define-const x17 (_ BitVec 64) (bvxor x15 (_ bv5 64)))
(define-const x18 (_ BitVec 64) (bvxor x17 x16))
(define-const x19 (_ BitVec 64) (bvlshr x12 (_ bv3 64)))
(assert (=> (not b13) (= (bvand x18 (_ bv7 64)) (_ bv1 64))))
(define-const b20 Bool (= x19 (_ bv0 64)))
(assert (=> b20 false))
(define-const x21 (_ BitVec 64) (bvand x19 (_ bv7 64)))
(define-const x22 (_ BitVec 64) (bvxor x21 (_ bv1 64)))
(define-const x23 (_ BitVec 64) (bvlshr x19 x22))
(define-const x24 (_ BitVec 64) (bvxor x22 (_ bv5 64)))
(define-const x25 (_ BitVec 64) (bvxor x24 x23))
(define-const x26 (_ BitVec 64) (bvlshr x19 (_ bv3 64)))
(assert (=> (not b20) (= (bvand x25 (_ bv7 64)) (_ bv1 64))))
(define-const b27 Bool (= x26 (_ bv0 64)))
(assert (=> b27 false))
(define-const x28 (_ BitVec 64) (bvand x26 (_ bv7 64)))
(define-const x29 (_ BitVec 64) (bvxor x28 (_ bv1 64)))
(define-const x30 (_ BitVec 64) (bvlshr x26 x29))
(define-const x31 (_ BitVec 64) (bvxor x29 (_ bv5 64)))
(define-const x32 (_ BitVec 64) (bvxor x31 x30))
(define-const x33 (_ BitVec 64) (bvlshr x26 (_ bv3 64)))
(assert (=> (not b27) (= (bvand x32 (_ bv7 64)) (_ bv7 64))))
(define-const b34 Bool (= x33 (_ bv0 64)))
(assert (=> b34 false))
(define-const x35 (_ BitVec 64) (bvand x33 (_ bv7 64)))
(define-const x36 (_ BitVec 64) (bvxor x35 (_ bv1 64)))
(define-const x37 (_ BitVec 64) (bvlshr x33 x36))
(define-const x38 (_ BitVec 64) (bvxor x36 (_ bv5 64)))
(define-const x39 (_ BitVec 64) (bvxor x38 x37))
(define-const x40 (_ BitVec 64) (bvlshr x33 (_ bv3 64)))
(assert (=> (not b34) (= (bvand x39 (_ bv7 64)) (_ bv5 64))))
(define-const b41 Bool (= x40 (_ bv0 64)))
(assert (=> b41 false))
(define-const x42 (_ BitVec 64) (bvand x40 (_ bv7 64)))
(define-const x43 (_ BitVec 64) (bvxor x42 (_ bv1 64)))
(define-const x44 (_ BitVec 64) (bvlshr x40 x43))
(define-const x45 (_ BitVec 64) (bvxor x43 (_ bv5 64)))
(define-const x46 (_ BitVec 64) (bvxor x45 x44))
(define-const x47 (_ BitVec 64) (bvlshr x40 (_ bv3 64)))
(assert (=> (not b41) (= (bvand x46 (_ bv7 64)) (_ bv1 64))))
(define-const b48 Bool (= x47 (_ bv0 64)))
(assert (=> b48 false))
(define-const x49 (_ BitVec 64) (bvand x47 (_ bv7 64)))
(define-const x50 (_ BitVec 64) (bvxor x49 (_ bv1 64)))
(define-const x51 (_ BitVec 64) (bvlshr x47 x50))
(define-const x52 (_ BitVec 64) (bvxor x50 (_ bv5 64)))
(define-const x53 (_ BitVec 64) (bvxor x52 x51))
(define-const x54 (_ BitVec 64) (bvlshr x47 (_ bv3 64)))
(assert (=> (not b48) (= (bvand x53 (_ bv7 64)) (_ bv5 64))))
(define-const b55 Bool (= x54 (_ bv0 64)))
(assert (=> b55 false))
(define-const x56 (_ BitVec 64) (bvand x54 (_ bv7 64)))
(define-const x57 (_ BitVec 64) (bvxor x56 (_ bv1 64)))
(define-const x58 (_ BitVec 64) (bvlshr x54 x57))
(define-const x59 (_ BitVec 64) (bvxor x57 (_ bv5 64)))
(define-const x60 (_ BitVec 64) (bvxor x59 x58))
(define-const x61 (_ BitVec 64) (bvlshr x54 (_ bv3 64)))
(assert (=> (not b55) (= (bvand x60 (_ bv7 64)) (_ bv4 64))))
(define-const b62 Bool (= x61 (_ bv0 64)))
(assert (=> b62 false))
(define-const x63 (_ BitVec 64) (bvand x61 (_ bv7 64)))
(define-const x64 (_ BitVec 64) (bvxor x63 (_ bv1 64)))
(define-const x65 (_ BitVec 64) (bvlshr x61 x64))
(define-const x66 (_ BitVec 64) (bvxor x64 (_ bv5 64)))
(define-const x67 (_ BitVec 64) (bvxor x66 x65))
(define-const x68 (_ BitVec 64) (bvlshr x61 (_ bv3 64)))
(assert (=> (not b62) (= (bvand x67 (_ bv7 64)) (_ bv0 64))))
(define-const b69 Bool (= x68 (_ bv0 64)))
(assert (=> b69 false))
(define-const x70 (_ BitVec 64) (bvand x68 (_ bv7 64)))
(define-const x71 (_ BitVec 64) (bvxor x70 (_ bv1 64)))
(define-const x72 (_ BitVec 64) (bvlshr x68 x71))
(define-const x73 (_ BitVec 64) (bvxor x71 (_ bv5 64)))
(define-const x74 (_ BitVec 64) (bvxor x73 x72))
(define-const x75 (_ BitVec 64) (bvlshr x68 (_ bv3 64)))
(assert (=> (not b69) (= (bvand x74 (_ bv7 64)) (_ bv0 64))))
(define-const b76 Bool (= x75 (_ bv0 64)))
(assert (=> b76 false))
(define-const x77 (_ BitVec 64) (bvand x75 (_ bv7 64)))
(define-const x78 (_ BitVec 64) (bvxor x77 (_ bv1 64)))
(define-const x79 (_ BitVec 64) (bvlshr x75 x78))
(define-const x80 (_ BitVec 64) (bvxor x78 (_ bv5 64)))
(define-const x81 (_ BitVec 64) (bvxor x80 x79))
(define-const x82 (_ BitVec 64) (bvlshr x75 (_ bv3 64)))
(assert (=> (not b76) (= (bvand x81 (_ bv7 64)) (_ bv3 64))))
(define-const b83 Bool (= x82 (_ bv0 64)))
(assert (=> b83 false))
(define-const x84 (_ BitVec 64) (bvand x82 (_ bv7 64)))
(define-const x85 (_ BitVec 64) (bvxor x84 (_ bv1 64)))
(define-const x86 (_ BitVec 64) (bvlshr x82 x85))
(define-const x87 (_ BitVec 64) (bvxor x85 (_ bv5 64)))
(define-const x88 (_ BitVec 64) (bvxor x87 x86))
(define-const x89 (_ BitVec 64) (bvlshr x82 (_ bv3 64)))
(assert (=> (not b83) (= (bvand x88 (_ bv7 64)) (_ bv5 64))))
(define-const b90 Bool (= x89 (_ bv0 64)))
(assert (=> b90 false))
(define-const x91 (_ BitVec 64) (bvand x89 (_ bv7 64)))
(define-const x92 (_ BitVec 64) (bvxor x91 (_ bv1 64)))
(define-const x93 (_ BitVec 64) (bvlshr x89 x92))
(define-const x94 (_ BitVec 64) (bvxor x92 (_ bv5 64)))
(define-const x95 (_ BitVec 64) (bvxor x94 x93))
(define-const x96 (_ BitVec 64) (bvlshr x89 (_ bv3 64)))
(assert (=> (not b90) (= (bvand x95 (_ bv7 64)) (_ bv5 64))))
(define-const b97 Bool (= x96 (_ bv0 64)))
(assert (=> b97 false))
(define-const x98 (_ BitVec 64) (bvand x96 (_ bv7 64)))
(define-const x99 (_ BitVec 64) (bvxor x98 (_ bv1 64)))
(define-const x100 (_ BitVec 64) (bvlshr x96 x99))
(define-const x101 (_ BitVec 64) (bvxor x99 (_ bv5 64)))
(define-const x102 (_ BitVec 64) (bvxor x101 x100))
(define-const x103 (_ BitVec 64) (bvlshr x96 (_ bv3 64)))
(assert (=> (not b97) (= (bvand x102 (_ bv7 64)) (_ bv3 64))))
(define-const b104 Bool (= x103 (_ bv0 64)))
(assert (=> b104 false))
(define-const x105 (_ BitVec 64) (bvand x103 (_ bv7 64)))
(define-const x106 (_ BitVec 64) (bvxor x105 (_ bv1 64)))
(define-const x107 (_ BitVec 64) (bvlshr x103 x106))
(define-const x108 (_ BitVec 64) (bvxor x106 (_ bv5 64)))
(define-const x109 (_ BitVec 64) (bvxor x108 x107))
(define-const x110 (_ BitVec 64) (bvlshr x103 (_ bv3 64)))
(assert (=> (not b104) (= (bvand x109 (_ bv7 64)) (_ bv0 64))))
(define-const b111 Bool (= x110 (_ bv0 64)))
(define-const x112 (_ BitVec 64) (bvand x110 (_ bv7 64)))
(define-const x113 (_ BitVec 64) (bvxor x112 (_ bv1 64)))
(define-const x114 (_ BitVec 64) (bvlshr x110 x113))
(define-const x115 (_ BitVec 64) (bvxor x113 (_ bv5 64)))
(define-const x116 (_ BitVec 64) (bvxor x115 x114))
(define-const x117 (_ BitVec 64) (bvlshr x110 (_ bv3 64)))
(assert (=> (not b111) false))
(check-sat)
(get-value (a0))
