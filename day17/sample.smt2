(set-option :pp.bv-literals false)
(declare-const a0 (_ BitVec 64))
(assert (bvult a0 (_ bv164545589767869 64)))
(define-const b0 (_ BitVec 64) (_ bv0 64))
(define-const c0 (_ BitVec 64) (_ bv0 64))
(define-const x0 (_ BitVec 64) (bvand a0 (_ bv7 64)))
(define-const x1 (_ BitVec 64) (bvxor x0 (_ bv1 64)))
(define-const x2 (_ BitVec 64) (bvlshr a0 x1))
(define-const x3 (_ BitVec 64) (bvxor x1 (_ bv5 64)))
(define-const x4 (_ BitVec 64) (bvxor x3 x2))
(define-const x5 (_ BitVec 64) (bvlshr a0 (_ bv3 64)))
(assert (= (bvand x4 (_ bv7 64)) (_ bv2 64)))
(assert (not (= x5 (_ bv0 64))))
(define-const x6 (_ BitVec 64) (bvand x5 (_ bv7 64)))
(define-const x7 (_ BitVec 64) (bvxor x6 (_ bv1 64)))
(define-const x8 (_ BitVec 64) (bvlshr x5 x7))
(define-const x9 (_ BitVec 64) (bvxor x7 (_ bv5 64)))
(define-const x10 (_ BitVec 64) (bvxor x9 x8))
(define-const x11 (_ BitVec 64) (bvlshr x5 (_ bv3 64)))
(assert (= (bvand x10 (_ bv7 64)) (_ bv4 64)))
(assert (not (= x11 (_ bv0 64))))
(define-const x12 (_ BitVec 64) (bvand x11 (_ bv7 64)))
(define-const x13 (_ BitVec 64) (bvxor x12 (_ bv1 64)))
(define-const x14 (_ BitVec 64) (bvlshr x11 x13))
(define-const x15 (_ BitVec 64) (bvxor x13 (_ bv5 64)))
(define-const x16 (_ BitVec 64) (bvxor x15 x14))
(define-const x17 (_ BitVec 64) (bvlshr x11 (_ bv3 64)))
(assert (= (bvand x16 (_ bv7 64)) (_ bv1 64)))
(assert (not (= x17 (_ bv0 64))))
(define-const x18 (_ BitVec 64) (bvand x17 (_ bv7 64)))
(define-const x19 (_ BitVec 64) (bvxor x18 (_ bv1 64)))
(define-const x20 (_ BitVec 64) (bvlshr x17 x19))
(define-const x21 (_ BitVec 64) (bvxor x19 (_ bv5 64)))
(define-const x22 (_ BitVec 64) (bvxor x21 x20))
(define-const x23 (_ BitVec 64) (bvlshr x17 (_ bv3 64)))
(assert (= (bvand x22 (_ bv7 64)) (_ bv1 64)))
(assert (not (= x23 (_ bv0 64))))
(define-const x24 (_ BitVec 64) (bvand x23 (_ bv7 64)))
(define-const x25 (_ BitVec 64) (bvxor x24 (_ bv1 64)))
(define-const x26 (_ BitVec 64) (bvlshr x23 x25))
(define-const x27 (_ BitVec 64) (bvxor x25 (_ bv5 64)))
(define-const x28 (_ BitVec 64) (bvxor x27 x26))
(define-const x29 (_ BitVec 64) (bvlshr x23 (_ bv3 64)))
(assert (= (bvand x28 (_ bv7 64)) (_ bv7 64)))
(assert (not (= x29 (_ bv0 64))))
(define-const x30 (_ BitVec 64) (bvand x29 (_ bv7 64)))
(define-const x31 (_ BitVec 64) (bvxor x30 (_ bv1 64)))
(define-const x32 (_ BitVec 64) (bvlshr x29 x31))
(define-const x33 (_ BitVec 64) (bvxor x31 (_ bv5 64)))
(define-const x34 (_ BitVec 64) (bvxor x33 x32))
(define-const x35 (_ BitVec 64) (bvlshr x29 (_ bv3 64)))
(assert (= (bvand x34 (_ bv7 64)) (_ bv5 64)))
(assert (not (= x35 (_ bv0 64))))
(define-const x36 (_ BitVec 64) (bvand x35 (_ bv7 64)))
(define-const x37 (_ BitVec 64) (bvxor x36 (_ bv1 64)))
(define-const x38 (_ BitVec 64) (bvlshr x35 x37))
(define-const x39 (_ BitVec 64) (bvxor x37 (_ bv5 64)))
(define-const x40 (_ BitVec 64) (bvxor x39 x38))
(define-const x41 (_ BitVec 64) (bvlshr x35 (_ bv3 64)))
(assert (= (bvand x40 (_ bv7 64)) (_ bv1 64)))
(assert (not (= x41 (_ bv0 64))))
(define-const x42 (_ BitVec 64) (bvand x41 (_ bv7 64)))
(define-const x43 (_ BitVec 64) (bvxor x42 (_ bv1 64)))
(define-const x44 (_ BitVec 64) (bvlshr x41 x43))
(define-const x45 (_ BitVec 64) (bvxor x43 (_ bv5 64)))
(define-const x46 (_ BitVec 64) (bvxor x45 x44))
(define-const x47 (_ BitVec 64) (bvlshr x41 (_ bv3 64)))
(assert (= (bvand x46 (_ bv7 64)) (_ bv5 64)))
(assert (not (= x47 (_ bv0 64))))
(define-const x48 (_ BitVec 64) (bvand x47 (_ bv7 64)))
(define-const x49 (_ BitVec 64) (bvxor x48 (_ bv1 64)))
(define-const x50 (_ BitVec 64) (bvlshr x47 x49))
(define-const x51 (_ BitVec 64) (bvxor x49 (_ bv5 64)))
(define-const x52 (_ BitVec 64) (bvxor x51 x50))
(define-const x53 (_ BitVec 64) (bvlshr x47 (_ bv3 64)))
(assert (= (bvand x52 (_ bv7 64)) (_ bv4 64)))
(assert (not (= x53 (_ bv0 64))))
(define-const x54 (_ BitVec 64) (bvand x53 (_ bv7 64)))
(define-const x55 (_ BitVec 64) (bvxor x54 (_ bv1 64)))
(define-const x56 (_ BitVec 64) (bvlshr x53 x55))
(define-const x57 (_ BitVec 64) (bvxor x55 (_ bv5 64)))
(define-const x58 (_ BitVec 64) (bvxor x57 x56))
(define-const x59 (_ BitVec 64) (bvlshr x53 (_ bv3 64)))
(assert (= (bvand x58 (_ bv7 64)) (_ bv0 64)))
(assert (not (= x59 (_ bv0 64))))
(define-const x60 (_ BitVec 64) (bvand x59 (_ bv7 64)))
(define-const x61 (_ BitVec 64) (bvxor x60 (_ bv1 64)))
(define-const x62 (_ BitVec 64) (bvlshr x59 x61))
(define-const x63 (_ BitVec 64) (bvxor x61 (_ bv5 64)))
(define-const x64 (_ BitVec 64) (bvxor x63 x62))
(define-const x65 (_ BitVec 64) (bvlshr x59 (_ bv3 64)))
(assert (= (bvand x64 (_ bv7 64)) (_ bv0 64)))
(assert (not (= x65 (_ bv0 64))))
(define-const x66 (_ BitVec 64) (bvand x65 (_ bv7 64)))
(define-const x67 (_ BitVec 64) (bvxor x66 (_ bv1 64)))
(define-const x68 (_ BitVec 64) (bvlshr x65 x67))
(define-const x69 (_ BitVec 64) (bvxor x67 (_ bv5 64)))
(define-const x70 (_ BitVec 64) (bvxor x69 x68))
(define-const x71 (_ BitVec 64) (bvlshr x65 (_ bv3 64)))
(assert (= (bvand x70 (_ bv7 64)) (_ bv3 64)))
(assert (not (= x71 (_ bv0 64))))
(define-const x72 (_ BitVec 64) (bvand x71 (_ bv7 64)))
(define-const x73 (_ BitVec 64) (bvxor x72 (_ bv1 64)))
(define-const x74 (_ BitVec 64) (bvlshr x71 x73))
(define-const x75 (_ BitVec 64) (bvxor x73 (_ bv5 64)))
(define-const x76 (_ BitVec 64) (bvxor x75 x74))
(define-const x77 (_ BitVec 64) (bvlshr x71 (_ bv3 64)))
(assert (= (bvand x76 (_ bv7 64)) (_ bv5 64)))
(assert (not (= x77 (_ bv0 64))))
(define-const x78 (_ BitVec 64) (bvand x77 (_ bv7 64)))
(define-const x79 (_ BitVec 64) (bvxor x78 (_ bv1 64)))
(define-const x80 (_ BitVec 64) (bvlshr x77 x79))
(define-const x81 (_ BitVec 64) (bvxor x79 (_ bv5 64)))
(define-const x82 (_ BitVec 64) (bvxor x81 x80))
(define-const x83 (_ BitVec 64) (bvlshr x77 (_ bv3 64)))
(assert (= (bvand x82 (_ bv7 64)) (_ bv5 64)))
(assert (not (= x83 (_ bv0 64))))
(define-const x84 (_ BitVec 64) (bvand x83 (_ bv7 64)))
(define-const x85 (_ BitVec 64) (bvxor x84 (_ bv1 64)))
(define-const x86 (_ BitVec 64) (bvlshr x83 x85))
(define-const x87 (_ BitVec 64) (bvxor x85 (_ bv5 64)))
(define-const x88 (_ BitVec 64) (bvxor x87 x86))
(define-const x89 (_ BitVec 64) (bvlshr x83 (_ bv3 64)))
(assert (= (bvand x88 (_ bv7 64)) (_ bv3 64)))
(assert (not (= x89 (_ bv0 64))))
(define-const x90 (_ BitVec 64) (bvand x89 (_ bv7 64)))
(define-const x91 (_ BitVec 64) (bvxor x90 (_ bv1 64)))
(define-const x92 (_ BitVec 64) (bvlshr x89 x91))
(define-const x93 (_ BitVec 64) (bvxor x91 (_ bv5 64)))
(define-const x94 (_ BitVec 64) (bvxor x93 x92))
(define-const x95 (_ BitVec 64) (bvlshr x89 (_ bv3 64)))
(assert (= (bvand x94 (_ bv7 64)) (_ bv0 64)))
(assert (= x95 (_ bv0 64)))
(check-sat)
(get-value (a0))
